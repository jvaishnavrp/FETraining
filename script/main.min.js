"use strict";

function accordian() {
  var headings = document.querySelectorAll(".accordion__heading");
  var triggers = [];
  var accordionContents = document.querySelectorAll(".accordion__copy");
  var copyOpenClass = "accordion__copy--open";
  headings.forEach(function (h, i) {
    var btn = h.querySelector("button");
    triggers.push(btn);
    var target = h.nextElementSibling;

    btn.onclick = function () {
      var expanded = btn.getAttribute("aria-expanded") === "true";

      if (expanded) {
        closeItem();
      } else {
        openItem(target, btn);
      }
    };
  });

  function closeAllExpandedItems() {
    var expandedTriggers = triggers.filter(function (t) {
      return t.getAttribute("aria-expanded") === "true";
    });
    var expandedCopy = Array.from(accordionContents).filter(function (c) {
      return c.classList.value.includes(copyOpenClass);
    });
    expandedTriggers.forEach(function (trigger) {
      trigger.setAttribute("aria-expanded", false);
    });
    expandedCopy.forEach(function (copy) {
      copy.classList.remove(copyOpenClass);
      copy.style.maxHeight = 0;
      copy.style.padding = "0 1.5rem 0 1.5rem";
      copy.setAttribute("aria-hidden", true);
    });
  }

  function closeItem() {
    closeAllExpandedItems();
  }

  function openItem(target, btn) {
    closeAllExpandedItems();
    btn.setAttribute("aria-expanded", true);
    target.classList.add(copyOpenClass);
    target.style.maxHeight = target.scrollHeight + "px";
    target.style.padding = "1rem 1.5rem 2rem 1.5rem";
    target.setAttribute("aria-hidden", false);
  } // uncomment this line if you want to open the first accordian
  //setTimeout(() => triggers[0].click(), 750);

}

window.addEventListener("load", accordian, false);
"use strict";

window.addEventListener("DOMContentLoaded", function () {
  var headerButton = document.querySelector('.header__nav-list-item-button');
  var headerHamburger = document.querySelector('.header__hamburger-button');
  var headerList = document.querySelector('.header__nav-list');

  function toggleNav() {
    headerList.classList.toggle('show-Nav');
  }

  function toggleInfoDropdown() {
    var dropdownContainer = document.querySelector('*[data-infodropdownisopen');
    var currentState = dropdownContainer.getAttribute('data-infodropdownisopen') === 'true';
    dropdownContainer.setAttribute('data-infodropdownisopen', !currentState);
    dropdownContainer.setAttribute('aria-expanded', "".concat(!currentState));

    if (!currentState) {
      // Is open
      document.body.addEventListener('click', clickToCloseDropdown);
      document.body.addEventListener('keyup', keyToCloseDropdown);
    } else {
      // Is closed
      document.body.removeEventListener('click', clickToCloseDropdown);
      document.body.removeEventListener('keyup', keyToCloseDropdown);
    }
  }

  var keyToCloseDropdown = function keyToCloseDropdown(e) {
    // Escape || Tab outside dropdown
    if (e.which === 27 || e.which === 9 && e.target.closest('[data-infodropdownisopen]') === null) {
      toggleInfoDropdown();
    }
  };

  var clickToCloseDropdown = function clickToCloseDropdown(e) {
    if (!e.target.classList.contains('header__nav-list-item-button')) {
      toggleInfoDropdown();
    }
  };

  headerButton.addEventListener('click', toggleInfoDropdown, false);
  headerHamburger.addEventListener("click", toggleNav, false);
  console.log("this is loaded");
});
"use strict";

window.addEventListener("load", function () {
  var modalButton = document.querySelector('.modal-button');
  var modalContent = document.querySelector('.modal__content');
  var modalClose = document.querySelector('.modal__close');

  function showModal() {
    modalContent.classList.add('show');
    modalContent.setAttribute("aria-hidden", false);
  }

  function hideModal() {
    if (modalContent.classList.contains('show')) {
      modalContent.classList.remove('show');
      modalContent.setAttribute("aria-hidden", true);
    }
  }

  modalButton.addEventListener("click", showModal, false);
  modalClose.addEventListener("click", hideModal, false);
  document.addEventListener('keydown', function (event) {
    if (event.key === 'Escape') {
      hideModal();
    }
  });
});
"use strict";

var other = function other() {
  var version = 4;
  return "We are using gulp ".concat(version);
};

other();
"use strict";

window.addEventListener('DOMContentLoaded', function () {
  var tabs = document.querySelectorAll('[role="tab"]');
  var tabList = document.querySelector('[role="tablist"]'); // Add a click event handler to each tab

  tabs.forEach(function (tab) {
    tab.addEventListener('click', changeTabs);
  }); // Enable arrow navigation between tabs in the tab list

  var tabFocus = 0;
  tabList.addEventListener('keydown', function (e) {
    // Move right
    if (e.keyCode === 39 || e.keyCode === 37) {
      tabs[tabFocus].setAttribute('tabindex', -1);

      if (e.keyCode === 39) {
        tabFocus++; // If we're at the end, go to the start

        if (tabFocus >= tabs.length) {
          tabFocus = 0;
        } // Move left

      } else if (e.keyCode === 37) {
        tabFocus--; // If we're at the start, move to the end

        if (tabFocus < 0) {
          tabFocus = tabs.length - 1;
        }
      }

      tabs[tabFocus].setAttribute('tabindex', 0);
      tabs[tabFocus].focus();
    }
  });
});

function changeTabs(e) {
  var target = e.target;
  var parent = target.parentNode;
  var grandparent = parent.parentNode; // Remove all current selected tabs

  parent.querySelectorAll('[aria-selected="true"]').forEach(function (t) {
    return t.setAttribute('aria-selected', false);
  }); // Set this tab as selected

  target.setAttribute('aria-selected', true); // Hide all tab panels

  grandparent.querySelectorAll('[role="tabpanel"]').forEach(function (p) {
    return p.setAttribute('hidden', true);
  }); // Show the selected panel

  grandparent.parentNode.querySelector("#".concat(target.getAttribute('aria-controls'))).removeAttribute('hidden');
}
//# sourceMappingURL=main.min.js.map
